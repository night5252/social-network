{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","event","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","className","styles","descriptionBlock","alt","src","photos","large","Preloader","Post","classes","item","post","likesCount","dislikesCount","maxLength20","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","MyPosts","memo","postsElements","posts","map","id","LikesCount","DislikesCount","postsBlock","values","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","autorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.82afba55.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/Login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3HQp7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1WlPn\",\"posts\":\"MyPosts_posts__2XENT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1viI9\"};","import React, { useState } from 'react'\r\nimport { useEffect } from 'react'\r\n// import styles from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (event) => {\r\n        setStatus(event.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>\r\n                        {props.status || ''}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} onBlur={deactivateEditMode}\r\n                        autoFocus={true} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react'\r\nimport styles from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <content>\r\n      <div className={styles.descriptionBlock}>\r\n        <img alt='ava' src={profile.photos.large} />\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </content>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  \r\n  return (\r\n    <div className={classes.item}>\r\n      <img alt=\"avatar\" src='https://i.pinimg.com/236x/2d/0f/50/2d0f50e8e4f6b233c7cf70b4bd36f89c--logo-inspiration-avatar.jpg' />\r\n      {props.post}\r\n      <div>\r\n        <span> like </span> {props.likesCount}\r\n        <span> dislike </span> {props.dislikesCount}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react'\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators'\r\nimport { Textarea } from '../../common/FormsControls/FormsControls'\r\n\r\nconst maxLength20 = maxLengthCreator(20)\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} placeholder='Enter your post' name='newPostText'\r\n          validate={[required, maxLength20]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nconst AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  let postsElements = props.posts.map(post => <Post post={post.post} id={post.id}\r\n    likesCount={post.LikesCount} dislikesCount={post.DislikesCount} />)\r\n\r\n  let onAddPost = values => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  return <div className={classes.postsBlock}>\r\n    <h3>My posts</h3>\r\n    <AddNewPostFormRedux onSubmit={onAddPost} />\r\n    <div className={classes.posts}>\r\n      {postsElements}\r\n    </div>\r\n  </div>\r\n})\r\n\r\nexport default MyPosts","import { addPostActionCreator } from '../../../Redux/profile-reducer'\r\nimport MyPosts from './MyPosts'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from 'react'\r\n// import classes from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <content>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </content>\r\n  )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux'\r\nimport { getUserProfile, getStatus, updateStatus } from '../../Redux/profile-reducer'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId\r\n    if (!userId) {\r\n      userId = this.props.autorizedUserId\r\n      if (!userId) {\r\n        this.props.history.push('/login')\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId)\r\n    this.props.getStatus(userId)\r\n  }\r\n  render() {\r\n    // console.log(\"RENDER PROFILE\")\r\n    return (\r\n      <Profile {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus} />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  // console.log(\"mapStateToProps PROFILE\")\r\n  return ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n  })\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}