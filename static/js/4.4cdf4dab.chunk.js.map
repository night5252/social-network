{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","path","id","className","classes","dialog","active","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","messagesPage","dialogsElements","dialogsData","map","key","messagesElements","messagesData","dialogs","dialogsItems","messages","values","sendMessage","newMessageText","compose","dispatch","sendMessageActionCreator"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,uICG/MC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAG,eAHT,GACXC,IAAML,WAStC,OAFqCM,YAAQX,EAARW,CAAoCL,K,+FCH9DM,EATI,SAACJ,GAChB,IAAIK,EAAO,YAAcL,EAAMM,GAC/B,OACI,yBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,QAC3C,kBAAC,IAAD,CAAST,GAAII,GAAOL,EAAMW,QCDvBC,EAJC,SAACZ,GACb,OAAO,yBAAKO,UAAWC,IAAQK,SAAUb,EAAMa,U,yCCC7CC,EAAcC,YAAiB,IAgBtBC,cAAU,CAAEC,KAAM,2BAAlBD,EAdQ,SAAChB,GACpB,OACI,0BAAMkB,SAAUlB,EAAMmB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUV,GACjDW,YAAY,qBAAqBd,KAAK,oBAE1C,6BACI,6CCqBDe,EA5BC,SAAC1B,GACb,IAAIP,EAAQO,EAAM2B,aAEdC,EAAkBnC,EAAMoC,YAAYC,KAAI,SAAArB,GAAM,OAC9C,kBAAC,EAAD,CAAYE,KAAMF,EAAOE,KAAMoB,IAAKtB,EAAOH,GAAIA,GAAIG,EAAOH,QAC1D0B,EAAmBvC,EAAMwC,aAAaH,KAAI,SAAAjB,GAAO,OACjD,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASkB,IAAKlB,EAAQP,GAAIA,GAAIO,EAAQP,QAOpE,OAAqB,IAAjBN,EAAMN,OAAyB,kBAAC,IAAD,CAAUO,GAAG,WAG5C,yBAAKM,UAAWC,IAAQ0B,SACpB,yBAAK3B,UAAWC,IAAQ2B,cACnBP,GAEL,yBAAKrB,UAAWC,IAAQ4B,UACpB,6BAAMJ,GACN,kBAAC,EAAD,CAAgBd,SAbR,SAACmB,GACjBrC,EAAMsC,YAAYD,EAAOE,sB,wBCElBC,sBACXrC,aAdkB,SAACV,GACnB,MAAO,CACHkC,aAAclC,EAAMkC,iBAGH,SAACc,GACtB,MAAO,CACHH,YAAa,SAACC,GACVE,EAASC,YAAyBH,SAO1C3C,IAFW4C,CAGbd","file":"static/js/4.4cdf4dab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1QITe\",\"dialogsItems\":\"Dialogs_dialogsItems__-rDCB\",\"dialog\":\"Dialogs_dialog__2pF8u\",\"active\":\"Dialogs_active__3pDV4\",\"messages\":\"Dialogs_messages__w4deU\",\"message\":\"Dialogs_message__uIE5F\"};","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/Login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={classes.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message; ","import React from 'react';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]} \r\n                placeholder='Enter your message' name=\"newMessageText\" />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({ form: 'dialog-add-message-form' })(AddMessageForm);","import React from 'react'\r\nimport classes from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { Redirect } from 'react-router-dom'\r\n// import { Field, reduxForm } from 'redux-form'\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm'\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.messagesPage\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog =>\r\n        <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />)\r\n    let messagesElements = state.messagesData.map(message =>\r\n        <Message message={message.message} key={message.id} id={message.id} />)\r\n    // let newMessageText = state.newMessageText\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageText)\r\n    }\r\n\r\n    if (props.isAuth === false) return <Redirect to='/Login' />\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","// import React from 'react'\r\nimport { sendMessageActionCreator } from '../../Redux/dialogs-reducer'\r\nimport Dialogs from './Dialogs'\r\nimport { connect } from 'react-redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageText) => {\r\n            dispatch(sendMessageActionCreator(newMessageText))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}